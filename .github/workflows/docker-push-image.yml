name: ci

on:
  push:
    branches:
      - 'main'

jobs:
  build_and_push:
    runs-on: ubuntu-latest
    steps:
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      -
        name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # -
      #   name: Build and push
      #   uses: docker/build-push-action@v5
      #   with:
      #     push: true
      #     # tags: wuttinanwork/jsfprimeface:latest
      #     tags: wuttinanwork/jsfprimeface:${{ github.sha }}

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: wuttinanwork/jsfprimeface:latest

    outputs:
      digest: ${{ steps.docker_build.outputs.digest }}

  deploy_to_gcp_cloud_run:
    needs: build_and_push
    runs-on: ubuntu-latest

    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
      - uses: 'google-github-actions/auth@v2'
        # with:
        #   workload_identity_provider: 'projects/123456789/locations/global/workloadIdentityPools/my-pool/providers/my-provider'
        #   service_account: 'my-service-account@my-project.iam.gserviceaccount.com'
        with:
          credentials_json: '${{ secrets.GOOGLE_CREDENTIALS }}' # Replace with the name of your GitHub Actions secret

      - name: Get the image SHA
        run: echo "The image SHA is ${{ needs.build_and_push.outputs.digest }}"

      - uses: 'google-github-actions/deploy-cloudrun@v2'
        with:
          image: docker.io/wuttinanwork/jsfprimeface@${{ needs.build_and_push.outputs.digest }}
          service: 'jsfprimeface'
          region: us-west1
          containerPort: 8080
          # set resource memory to '1GB' and CPU to 1
          memory: 1Gi
          cpu: 1
          # set minimum instances to 1 and maximum instances to 3
          minInstances: 1
          maxInstances: 3
          # allow unauthenticated invocations
          allowUnauthenticated: true
